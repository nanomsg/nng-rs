[package]
name = "nng-sys"
version = "0.3.0+1.11.0"
authors = [
    "Nathan Kent <nate@nkent.net>",
    "Jake W <jeikabu@gmail.com>",
    "Felix Obenhuber <felix.obenhuber@helsing.ai>",
]

description = "Bindings to NNG (Nanomsg-Next-Generation) aka Nanomsg2"
keywords = ["nng", "nanomsg", "zeromq"]
categories = ["network-programming", "external-ffi-bindings", "os"]
license = "MIT"
repository = "https://github.com/nanomsg/nng-rs"
readme = "README.md"
edition = "2018"
rust-version = "1.82.0" # unsafe extern blocks in generated bindings
links = "nng"

[features]
default = ["vendored", "vendored-stats", "std"]

# Build from vendored sources (default)
vendored = ["dep:cmake"]
# Force static linking
static = []
# Generate bindings at build time
bindgen = []
# Generate functionality that requires `std`
std = []

# NNG features
# Enabling these will only work if the linked NNG also has them enabled.
# If using a vendored build, nng-sys will ensure that they get enabled
# appropriately, but otherwise that will be your responsibility.

# Turns on NNG_ENABLE_STATS.
#
# Does not affect the bindings, so this is only relevant when vendored.
vendored-stats = []

# Turns on NNG_ENABLE_TLS.
#
# Adds a dependency on mbedTLS.
# Does not affect the bindings.
# Emits additional cargo directives for linking against mbedtls.
tls = []

# nanomsg compatibility layer
# NOTE: this changes (adds to) the bindings as well
compat = ["bindgen"]

# supplemental utilities
# NOTE: this changes (adds to) the bindings as well
supplemental = ["bindgen"]

## Development features (for working with the source code)
# Update `src/bindings.rs` with all features enabled
source-update-bindings = ["bindgen"]

[dependencies]

[build-dependencies]
bindgen = "0.72.1"
cc = "1.2.41"
cmake = { version = "0.1.54", optional = true }
version_check = "0.9"

[target.'cfg(unix)'.build-dependencies]
pkg-config = "0.3"

[target.'cfg(target_env = "msvc")'.build-dependencies]
vcpkg = "0.2.15"

[package.metadata.docs.rs]
all-features = false
